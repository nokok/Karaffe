plugins {
  id 'com.github.johnrengelman.shadow' version '2.0.2'
  id 'java'
  id 'jacoco'
}

ext {
  junitVersion = '4.12'
  junit5Version = '5.1.0'
  logbackVersion = '1.2.3'
}

dependencies {
  compile subprojects
}

allprojects {
  repositories {
    mavenCentral()
  }
}

subprojects {
  apply plugin: 'com.github.johnrengelman.shadow'
  apply plugin: 'java'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  dependencies {
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
  }

  tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'

  jacocoTestReport {
    reports {
      xml.enabled true
    }
  }
}

processResources {
  from 'resources'
}

apply from: 'gradle/project_structure.gradle'
apply from: 'gradle/detect_java_version.gradle'

project(':ast') {
}

project(':backend') {
  dependencies {
    // compile group: 'org.ow2.asm', name: 'asm-all', version: '6.1'
    compile group: 'org.ow2.asm', name: 'asm', version: '6.1'
    compile group: 'org.ow2.asm', name: 'asm-commons', version: '6.1'
    compile group: 'org.ow2.asm', name: 'asm-util', version: '6.1'
    compile group: 'org.ow2.asm', name: 'asm-tree', version: '6.1'
    compile group: 'org.ow2.asm', name: 'asm-analysis', version: '6.1'
    compile group: 'org.ow2.asm', name: 'asm-test', version: '6.1'
  }
}

project(':base') {
}

project(':corelib') {
}

project(':frontend') {
}

project(':transformer') {
}

project(':test') {
  dependencies {
    testCompile group: 'junit', name: 'junit', version: junitVersion
  }
}

task codeCoverageReport(type: JacocoReport) {
  executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

  subprojects.each {
    sourceSets it.sourceSets.main
  }

  reports {
    xml.enabled true
      xml.destination "${buildDir}/reports/jacoco/report.xml"
      html.enabled false
      csv.enabled false
  }
}

codeCoverageReport.dependsOn {
  subprojects*.test
}
