package org.karaffe.compiler.frontend.karaffe.listener;

import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.TerminalNode;
import org.karaffe.compiler.ast.CompilationUnit;
import org.karaffe.compiler.frontend.karaffe.antlrautogenerated.KaraffeListener;
import org.karaffe.compiler.frontend.karaffe.antlrautogenerated.KaraffeParser;

public class ASTBuilder implements KaraffeListener {
    private final CompilationUnit compilationUnit;

    public ASTBuilder() {
        this.compilationUnit = new CompilationUnit();
    }

    public CompilationUnit getCompilationUnit() {
        return compilationUnit;
    }

    @Override
    public void enterCompilationUnit(KaraffeParser.CompilationUnitContext ctx) {

    }

    @Override
    public void exitCompilationUnit(KaraffeParser.CompilationUnitContext ctx) {

    }

    @Override
    public void enterStatement(KaraffeParser.StatementContext ctx) {

    }

    @Override
    public void exitStatement(KaraffeParser.StatementContext ctx) {

    }

    @Override
    public void enterIntLiteral(KaraffeParser.IntLiteralContext ctx) {

    }

    @Override
    public void exitIntLiteral(KaraffeParser.IntLiteralContext ctx) {

    }

    @Override
    public void visitTerminal(TerminalNode node) {

    }

    @Override
    public void visitErrorNode(ErrorNode node) {

    }

    @Override
    public void enterEveryRule(ParserRuleContext ctx) {

    }

    @Override
    public void exitEveryRule(ParserRuleContext ctx) {

    }
}
