package it;

import org.antlr.v4.runtime.ANTLRInputStream;
import org.antlr.v4.runtime.CommonTokenStream;
import org.junit.Test;
import org.karaffe.compiler.frontend.karaffe.antlrautogenerated.KaraffeLexer;
import org.karaffe.compiler.frontend.karaffe.antlrautogenerated.KaraffeParser;

import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class KaraffeSyntaxTest {
    @Test
    public void testIntLiteral() {
        Map<String, String> map = new HashMap<>();
        map.put("0", "0");
        map.put("1", "1");
        map.put("2", "2");
        map.put("3", "3");
        map.put("4", "4");
        map.put("5", "5");
        map.put("6", "6");
        map.put("9", "9");
        map.put("11", "11");
        map.put("31", "31");
        map.put("10", "10");
        map.put("30", "30");

        for (Map.Entry<String, String> entry : map.entrySet()) {
            KaraffeParser parser = new KaraffeParser(new CommonTokenStream(new KaraffeLexer(new ANTLRInputStream(entry.getKey()))));
            assertEquals(entry.getValue(), parser.intLiteral().getText());
        }
    }
}
